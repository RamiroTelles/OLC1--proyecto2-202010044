package analizador;
import java_cup.runtime.*;
import java.util.ArrayList;
import structuras.tablaJson;

import structuras.arbol;

parser code
{:

        ArrayList<arbol> arbolesER = new ArrayList();

        public ArrayList getArboles(){
                return arbolesER;
        }

        ArrayList<tablaJson> tablaS = new ArrayList();

        public ArrayList getTablaS(){
                return tablaS;
        }

:}

//Terminales

terminal String COR_IZQ,COR_DER,PAR_IZQ,PAR_DER;
terminal String IGUAL,COMA,TCHAR;
terminal String MAS,MENOS, POR,DIV,MAYOR,MENOR,MAYORIGUAL,MENORIGUAL,EQUIVALENTE,DISTINTO;
terminal String AND,OR,NOT;
terminal String ID,STRING,DECIMAL,INT;
terminal String PUNTOCOMA;
terminal String RSTRING,RDOUBLE,RINT,RCHAR,RBOOL,RTRUE,RFALSE;




//no terminales


non terminal String instrucciones;
non terminal String instruccion;


non terminal String asignacion;

non terminal String declaracion1;
non terminal String declaracion2;


non terminal String varTipo;

non terminal arbol expLog;
non terminal arbol expLog1;
non terminal arbol expLog2;
non terminal arbol expNot;

non terminal arbol expRel;
non terminal arbol expRel1;

non terminal arbol expArit;
non terminal arbol expArit2;
non terminal arbol expArit3;
non terminal arbol expArit4;

non terminal arbol expPrima;


non terminal arbol valor;
non terminal arbol valor1;
non terminal arbol datoArray;


//precendencia

//precedence left else,elseif



//producciones

start with instrucciones;

instrucciones::= instrucciones instruccion
                |instruccion
;

instruccion::= declaracion1
        |asignacion

;

asignacion::= ID IGUAL expLog PUNTOCOMA;

declaracion1 ::= varTipo:a ID declaracion2 
;



declaracion2::= IGUAL expLog PUNTOCOMA
        |PUNTOCOMA
;

varTipo ::= RSTRING
        |RDOUBLE 
        |RINT
        |RCHAR
        |RBOOL
;

expLog::= expLog OR expLog1
        |expLog1 
;

expLog1 ::= expLog1 AND expLog2
        |expLog2 
;

expLog2 ::= expNot expRel
        |expRel 
;

expNot ::= expNot NOT
        |NOT
;




expRel::= expRel expRel1
        |expArit 
;

expRel1::= MAYOR expArit
        |MENOR expArit
        |MAYORIGUAL expArit
        |MENORIGUAL expArit
        |EQUIVALENTE expArit
        |DISTINTO expArit
;


expArit::= expArit expArit2
        |expArit3 
;

expArit2::= MAS expArit3
        |MENOS expArit3
;

expArit3::= expArit3 POR expArit4
        |expArit4
;

expArit4::= expArit4 DIV expPrima
        |expPrima
;

expPrima::= PAR_IZQ expLog PAR_DER
        |valor1
        
;

valor1::= MENOS expPrima
        |valor
;




valor ::= STRING
        |INT
        |DECIMAL
        |ID
        |COR_IZQ datoArray COR_DER
        |RTRUE
        |RFALSE
        |TCHAR
;

datoArray::= datoArray COMA valor1
        |valor1
;































